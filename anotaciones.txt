en el build.graddle del module en la parte de buildTypes release se
va a configurar para la subida a play store

en dependencies se va a agregar distintas librerias
no conviene llenar muchas librerias sino optimizar y poner solo las que
voy a usar

Los layouts pueden ser:
constraint layout
linear layout
relative layout

el relative por ahora no lo vamos a usar


android:layout_width="match_parent"
android:layout_height="match_parent"
va a ocupar todo el ancho de la pantalla

un constraint layout tiene como cadenas
a cada componente se le va agregando id's para identificar
cada uno y poder interactuar con el layout

Fragmentos:
-un fragmento convive en la activity
-un fragmento tiene como padre un activity
-es como una actividad, tiene su propio ciclo de vida
tambien se puede tener codigo igual que una activity pero mas liviano
en vez de crear varios fragmentos, se crea un contenedor y varios fragmentos
manejando un stack de fragmentos
-son mas performantes que la activity
Cuando inicia la actividad pongo un fragmento dentro del contenedor dentro de la activity
Para navegar de un fragment a otro, si agrego con add un fragment a la pila y no pongo replace se pega arriba del anterior

Para usar plugin de google para navegar entre fragmentos
1- Importo el plugin:
implementation("androidx.navigation:navigation-fragment-ktx:2.3.5")
implementation("androidx.navigation:navigation-ui-ktx:2.3.5")
2- Click derecho sobre res, new, android resource directory, selecciono navigation
3- Sobre la carpeta navigation click derecho, new, navigation resource file y pongo nombre
agregar al activity main del layour xml en el fragment container view:
android:name="androidx.navigation.fragment.NavHostFragment"
es para poder navegar entre fragmentos, le muestra el grafico de navegacion al fragment
agregar tambien:
app:defaultNavHost = "true" -> con esto defino que la casita sea sea el fragment inicial
app:navGraph = "@navigation/main_graph"

Para navegar desde un fragment a otro de otro graph no uso flecha por que si pongo flecha me va a llevar al fragment principal de ese graph y no a otro, uso deep linking, al destino le creo un deep link y le pongo cursoandroid://card por ejemplo
Ahora en el android manifest agrego dentro del <activity> el <nav-graph android:value="@navigation/product_graph"/>
en el findnavcontroller le paso el nombre del uri del deeplink que cree
findNavController().navigate(Uri.parse("cursoandroid://card"))
